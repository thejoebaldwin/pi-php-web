{
  "author": {
    "name": "Meadhbh Hamrick",
    "email": "OhMeadhbh@gmail.com",
    "url": "http://meadhbh.org/"
  },
  "name": "node-wiringpi",
  "description": "Node bindings for libwiringPi",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/OhMeadhbh/node-wiringpi.git"
  },
  "main": "node-wiringpi.js",
  "engines": {
    "node": "0.8"
  },
  "dependencies": {},
  "devDependencies": {
    "node-gyp": "0.8.x"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "node-wiringpi\n=============\n\nExtremely simple node wrapper for @drogon's wiringPi library (for blinky lights &amp; gpio w/ RaspberryPi)\n\n## Caution\n\nThis package assumes you know how to safely handle electronics and program\nGPIO pins. It's concievable you _could_ damage yourself or your Raspberry Pi\nwith improper circuit design or improper use of software interfaces. While the\nauthor of this package has made reasonable efforts to insure the accuracy of\nthe information and code contained within, it comes with absolutely no\nwarranty or guarantee of correctness.\n\n## Pre-Requisites\n\nBefore installing and/or building this package, please make sure you have\nthe wiringPi library and the node-gyp package installed. WiringPi info can\nbe found at <a href=\"https://projects.drogon.net/raspberry-pi/wiringpi/\">https://projects.drogon.net/raspberry-pi/wiringpi/</a>. Node-Gyp info can be found\nat <a href=\"https://github.com/TooTallNate/node-gyp\">https://github.com/TooTallNate/node-gyp</a>.\n\n## Installation\n\nThe easiest way to install this package is via npm:\n\n<pre>    npm install node-wiringpi</pre>\n\nOr, you can check out the source using git:\n\n<pre>    git clone git://github.com/OhMeadhbh/node-wiringpi.git</pre>\n\n## Building\n\nIf the package wasn't automagically built when you installed via npm, this\ncommand _should_ do the trick:\n\n<pre>    node-gyp configure build</pre>\n\nYou'll have problems if you haven't installed node-gyp or libwiringPi.\n\n## Testing\n\nI wrote a very simple LED blinker (this assumes you have a RPi w/ LEDs attached\nto GPIO pins. To run the program, use the command:\n\n<pre>    sudo node blinkin.js</pre>\n\nYou have to run the program as root so it has permission to access /dev/mem.\nYou _could_ modify the permissions on this file, but please don't do that\nunless you understand how big of a security hole you're creating.\n\n## API\n\nWe currently only support two wiringPi calls: pinMode() and digitalWrite().\nHopefully the only thing you wanted to do was to write to the GPIO ports.\n\nStart off by requiring the package:\n\n<pre>    var wpi = require( 'node-wiringpi' );</pre>\n\nIf you're curious, you can call the num_pins() function to find out how many\nGPIO pins you have:\n\n<pre>    console.log( \"you have \" + wpi.num_pins() + \" GPIO pins.\" );</pre>\n\nBefore you write to GPIO lines, you should set them in output mode. This\nsnippit sets pins 0 and 1 into output mode:\n\n<pre>    wpi.pin_mode( 0, wpi.PIN_MODE.OUTPUT );\n    wpi.pin_mode( 1, wpi.PIN_MODE.OUTPUT );</pre>\n\nOnce in output mode, you can write HIGH or LOW values to the pin. This\nsequence turns pins 0 and 1 on and off:\n\n<pre>    wpi.digital_write( 0, wpi.WRITE.LOW );\n    wpi.digital_write( 1, wpi.WRITE.LOW );\n    wpi.digital_write( 0, wpi.WRITE.HIGH );\n    wpi.digital_write( 1, wpi.WRITE.HIGH );</pre>",
  "readmeFilename": "README.md",
  "_id": "node-wiringpi@0.0.1",
  "dist": {
    "shasum": "a1bc06a83ae05fd186f4ccf5676f3ec2ea3c2c01"
  },
  "_from": "node-wiringpi"
}
